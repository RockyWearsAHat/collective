{"version":3,"file":"user.js","sources":["../../../db/models/user.ts"],"sourcesContent":["import bcrypt from \"bcrypt\";\nimport mongoose, { CallbackWithoutResultAndOptionalError } from \"mongoose\";\n\nexport interface IUser extends Document {\n  username: string;\n  password: string;\n  verifyPassword: (password: string) => boolean;\n}\n\ninterface UserModel extends mongoose.Model<IUser> {}\n\nconst userSchema = new mongoose.Schema<IUser, UserModel>({\n  username: String,\n  password: String,\n});\n\nuserSchema.method(\"verifyPassword\", function (password: string) {\n  return bcrypt.compareSync(password, this.password);\n});\n\nuserSchema.pre<IUser>(\n  \"save\",\n  async function (next: CallbackWithoutResultAndOptionalError) {\n    this.password = bcrypt.hashSync(\n      (this as IUser).password,\n      bcrypt.genSaltSync(10)\n    );\n    next();\n  }\n);\n\nconst User = mongoose.model<IUser>(\"User\", userSchema);\n\nexport { userSchema };\nexport default User;\n"],"names":[],"mappings":";;;AAWA,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAmB;AACvD,IAAA,QAAQ,EAAE,MAAM;AAChB,IAAA,QAAQ,EAAE,MAAM;AACjB,CAAA,EAAE;AAEH,UAAU,CAAC,MAAM,CAAC,gBAAgB,EAAE,UAAU,QAAgB,EAAA;IAC5D,OAAO,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,GAAG,CACZ,MAAM,EACN,gBAAgB,IAA2C,EAAA;AACzD,IAAA,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAC5B,IAAc,CAAC,QAAQ,EACxB,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CACvB,CAAC;AACF,IAAA,IAAI,EAAE,CAAC;AACT,CAAC,CACF,CAAC;AAEI,MAAA,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAQ,MAAM,EAAE,UAAU;;;;"}