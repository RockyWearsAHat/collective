{"version":3,"file":"register.js","sources":["../../../server/user/register.ts"],"sourcesContent":["import { Hono } from \"hono\";\nimport connectToMongo from \"../../db/connectToMongo\";\nimport User, { IUser } from \"../../db/models/user\";\n\nconst app = new Hono();\n\napp.post(\"/\", async (c) => {\n  await connectToMongo();\n\n  const { username, password }: Partial<IUser> = await c.req.json();\n\n  if (typeof username !== \"string\" || typeof password !== \"string\")\n    return c.json({ message: \"Username and password must be strings\" });\n\n  if (!username || !password || username.length == 0 || password.length == 0)\n    return c.json({ message: \"Username and password must not be empty\" });\n\n  const newUser = await User.create({ username, password });\n\n  return c.json({\n    registerRes: newUser,\n  });\n});\n\nexport default app;\n"],"names":[],"mappings":";;;;AAIA,MAAM,GAAG,GAAG,IAAI,IAAI,GAAG;AAEvB,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,KAAI;IACxB,MAAM,cAAc,EAAE,CAAC;AAEvB,IAAA,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAmB,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAElE,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ;QAC9D,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC,CAAC;AAEtE,IAAA,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC;QACxE,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yCAAyC,EAAE,CAAC,CAAC;AAExE,IAAA,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;IAE1D,OAAO,CAAC,CAAC,IAAI,CAAC;AACZ,QAAA,WAAW,EAAE,OAAO;AACrB,KAAA,CAAC,CAAC;AACL,CAAC,CAAC;;;;"}