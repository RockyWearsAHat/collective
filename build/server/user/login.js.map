{"version":3,"file":"login.js","sources":["../../../server/user/login.ts"],"sourcesContent":["import connectToMongo from \"../../db/connectToMongo\";\nimport User, { IUser } from \"../../db/models/user\";\nimport { Request, Response, Router } from \"express\";\n\nconst router = Router();\n\nrouter.post(\"/\", async (req: Request, res: Response) => {\n  let { username, password }: Partial<IUser> = req.body;\n\n  //Validate input\n  if (typeof username !== \"string\" || typeof password !== \"string\")\n    return res.json({ error: \"Username and password must be strings\" });\n\n  if (!username || !password || username.length == 0 || password.length == 0)\n    return res.json({ error: \"Username and password must not be empty\" });\n\n  //Get user from DB\n  await connectToMongo();\n  const foundUser = await User.findOne<IUser>({ username });\n\n  //Handle errors (user not found)\n  if (!foundUser)\n    return res.json({ error: `Unable to find user with username ${username}` });\n\n  //Verify the user entered the right info\n  const passwordsMatch = foundUser.verifyPassword(password);\n\n  //If not, throw error\n  if (!passwordsMatch) return res.json({ error: \"Invalid password\" });\n\n  //If so, assemble object to return and send it\n  const returnObj = { correctLogIn: true, username: foundUser.username };\n\n  return res.json(returnObj);\n});\n\nexport default router;\n"],"names":[],"mappings":";;;;AAIA,MAAM,MAAM,GAAG,MAAM,GAAG;AAExB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,GAAY,EAAE,GAAa,KAAI;IACrD,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAmB,GAAG,CAAC,IAAI,CAAC;;IAGtD,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ;QAC9D,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,uCAAuC,EAAE,CAAC,CAAC;AAEtE,IAAA,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC;QACxE,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yCAAyC,EAAE,CAAC,CAAC;;IAGxE,MAAM,cAAc,EAAE,CAAC;IACvB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,OAAO,CAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;;AAG1D,IAAA,IAAI,CAAC,SAAS;AACZ,QAAA,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAA,kCAAA,EAAqC,QAAQ,CAAA,CAAE,EAAE,CAAC,CAAC;;IAG9E,MAAM,cAAc,GAAG,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;;AAG1D,IAAA,IAAI,CAAC,cAAc;QAAE,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC,CAAC;;AAGpE,IAAA,MAAM,SAAS,GAAG,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC;AAEvE,IAAA,OAAO,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7B,CAAC,CAAC;;;;"}