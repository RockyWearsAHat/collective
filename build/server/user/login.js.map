{"version":3,"file":"login.js","sources":["../../../server/user/login.ts"],"sourcesContent":["import { Hono } from \"hono\";\nimport connectToMongo from \"../../db/connectToMongo\";\nimport User, { IUser } from \"../../db/models/user\";\n\nconst app = new Hono();\n\napp.post(\"/\", async (c) => {\n  await connectToMongo();\n\n  const { username, password }: Partial<IUser> = await c.req.json();\n\n  if (typeof username !== \"string\" || typeof password !== \"string\")\n    return c.json({ message: \"Username and password must be strings\" });\n\n  if (!username || !password || username.length == 0 || password.length == 0)\n    return c.json({ message: \"Username and password must not be empty\" });\n\n  const foundUser = await User.findOne<IUser>({ username });\n\n  if (!foundUser)\n    return c.json({ message: `Unable to find user with username ${username}` });\n\n  console.log(foundUser);\n\n  //   console.log(foundUser.verifyPassword(password));\n\n  const passwordsMatch = foundUser.verifyPassword(password);\n\n  console.log(passwordsMatch);\n\n  return c.json({\n    loginRes: foundUser ? foundUser : \"No user found\",\n    passwordsMatch,\n  });\n});\n\nexport default app;\n"],"names":[],"mappings":";;;;AAIA,MAAM,GAAG,GAAG,IAAI,IAAI,GAAG;AAEvB,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,KAAI;IACxB,MAAM,cAAc,EAAE,CAAC;AAEvB,IAAA,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAmB,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAElE,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ;QAC9D,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC,CAAC;AAEtE,IAAA,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC;QACxE,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yCAAyC,EAAE,CAAC,CAAC;IAExE,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,OAAO,CAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;AAE1D,IAAA,IAAI,CAAC,SAAS;AACZ,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAA,kCAAA,EAAqC,QAAQ,CAAA,CAAE,EAAE,CAAC,CAAC;AAE9E,IAAA,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;;IAIvB,MAAM,cAAc,GAAG,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AAE1D,IAAA,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAE5B,OAAO,CAAC,CAAC,IAAI,CAAC;QACZ,QAAQ,EAAE,SAAS,GAAG,SAAS,GAAG,eAAe;QACjD,cAAc;AACf,KAAA,CAAC,CAAC;AACL,CAAC,CAAC;;;;"}